    call .main
    halt

.ackermann:
    # variable storage
    # m in ra
    # n in rb
    # compare m to 0
    push ra
    jumpf .ackermann_m_0
    jump  .ackermann_m_not_0
.ackermann_m_0:
    # return n + 1
    pushu 1
    push rb
    addu
    return
.ackermann_m_not_0:
    # compare n to 0
    push rb
    jumpf .ackermann_n_0
    jump .ackermann_n_not_0
.ackermann_n_0:
    # decrement m
    pushu 1
    push ra
    subu
    pop ra
    # set n to 1
    pushu 1
    pop rb
    call .ackermann
    return
.ackermann_n_not_0:
    # store m - 1
    pushu 1
    push ra
    subu
    # decrement n
    pushu 1
    push rb
    subu
    pop rb
    call .ackermann
    pop rb
    pop ra
    call .ackermann
    return

.main:
    scanu
    pop ra
    scanu
    pop rb
    call .ackermann
    printu
    pops
    return
