    call .main
    halt

.fib:
    # store n in ra
    # compare ra to 1
    pushu 1
    push ra
    leu
    jumpf .fib_large
.fib_small:
    push ra
    return
.fib_large:
    # check if result is cached
    push ra
    top rc
    load
    top rb
    # compare cached value with 0
    # if 0, cache
    jumpt .fib_finish
    # decrement n second time
    pushu 1
    # decrement n first time
    pushu 1
    push ra
    subu
    top ra
    call .fib
    pop rb
    subu
    pop ra
    call .fib
    push rb
    addu
    top rb
    push rc
    store
.fib_finish:
    push rb
    return

.main:
    scanu
    pop ra
    call .fib
    printu
    pops
    return

