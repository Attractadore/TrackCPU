# solve the linear equation ax + b = 0
# x = -b / a
call .main
halt

.square_solve:
    # variable storage
    # a in ra
    # b in rb
    # c in rc
    # D in rd
    # x1 in re
    # x2 in rf
    # normalize b
    push ra
    push rb
    divf
    pop rb
    # normalize c
    push ra
    push rc
    divf
    pop rc
    # normalize a
    pushf 1
    pop ra
    # calculate sqrt(D)
    pushf 4
    push ra
    push rc
    mulf
    mulf
    push rb
    push rb
    mulf
    subf
    pop rd
    # calculate x1 = (0 - b + D) / 2
    pushf 2
    push rd
    push rb
    pushf 0
    subf
    addf
    divf
    pop re
    # calculate x2 = x1 - D
    push rd
    push re
    subf
    # pop rf
    # push x1 and x2 to stack
    # push rf
    push re
    return

.main:
    scanf
    pop ra
    scanf
    pop rb
    scanf
    pop rc
    call .square_solve
    printf
    pops
    printf
    pops
    return
